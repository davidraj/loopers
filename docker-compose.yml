version: '3.8'

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: looper_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/tmp
      - /app/log
    environment:
      - RAILS_ENV=development
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    command: bundle exec rails server -b 0.0.0.0

  frontend:
    build: /Users/davidrajsamuel/Documents/frontend
    ports:
      - "3001:3001"
    volumes:
      - /Users/davidrajsamuel/Documents/frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://host.docker.internal:3000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - backend

  sidekiq:
    build: .
    command: bundle exec sidekiq
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/looper_development
      REDIS_URL: redis://redis:6379/0
      RAILS_ENV: development

volumes:
  postgres_data:
  bundle_cache:
